"public static int FindSpring(String path) {\r\n    int R_Flag = 0, Web_Flag = 0;\r\n    // Xpath 尋找\r\n    try {\r\n        File inputFile = new File(path);\r\n        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\r\n        Document doc = dbFactory.newDocumentBuilder().parse(inputFile);\r\n        doc.getDocumentElement().normalize();\r\n        XPath xPath = XPathFactory.newInstance().newXPath();\r\n        // 判斷在 <parent> 中的 <groupId> 與 <artifactId> 是否為正確的spring boot專案\r\n        //找到 <project> <parent> 的地方\r\n        String parent_expr = \"/project/parent\";\r\n        NodeList parent_nodeList = (NodeList) xPath.compile(parent_expr).evaluate(doc, XPathConstants.NODESET);\r\n        if (parent_nodeList.item(0) != null) {\r\n            Node nNode = parent_nodeList.item(0);\r\n            if (nNode.getNodeType() == Node.ELEMENT_NODE) {\r\n                Element eElement = (Element) nNode;\r\n                if ((eElement.getElementsByTagName(\"groupId\").item(0).getTextContent().contains(\"org.springframework.boot\")) && (eElement.getElementsByTagName(\"artifactId\").item(0).getTextContent().contains(\"spring-boot-starter-parent\"))) {\r\n                    R_Flag = 1;\r\n                }\r\n            }\r\n        }\r\n        // 是否有 \"spring-boot-starter-web\" 在 <dependency> 中\r\n        String dependency_expr = \"/project/dependencies/dependency\";\r\n        NodeList depend_nodeList = (NodeList) xPath.compile(dependency_expr).evaluate(doc, XPathConstants.NODESET);\r\n        for (int i = 0; i < depend_nodeList.getLength(); i++) {\r\n            // 有幾個 dependency 就跑幾次 -> 無法只跑一次\r\n            if (depend_nodeList.item(i) != null) {\r\n                Node nNode = depend_nodeList.item(i);\r\n                if (nNode.getNodeType() == Node.ELEMENT_NODE) {\r\n                    Element eElement = (Element) nNode;\r\n                    if ((eElement.getElementsByTagName(\"groupId\").item(0).getTextContent().contains(\"org.springframework.boot\")) && (eElement.getElementsByTagName(\"artifactId\").item(0).getTextContent().contains(\"spring-boot-starter-web\"))) {\r\n                        Web_Flag = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } catch (ParserConfigurationException | SAXException | IOException | XPathExpressionException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return R_Flag & Web_Flag;\r\n}"