"public void find_annotation_AST() throws JsonProcessingException {\r\n    for (int i = 0; i < annotation_Node.size(); i++) {\r\n        //印接口、接口底下的method\r\n        System.out.println(annotation_Node.get(i).getAnnotations() + \"---\" + annotation_Node.get(i).getMethodName());\r\n        //找接口底下的method在MethodCallOtherMethods_Node裡的index\r\n        method_index = to_find.find_index(methodCall_Node, annotation_Node.get(i).getMethodName());\r\n        //判斷接口底下的method所呼叫的method是否為使用者自定義\r\n        CallMethods = methodCall_Node.get(method_index).getCallMethods_str();\r\n        for (String temp_CallMethods : CallMethods) {\r\n            for (int j = 0; j < 8; j++) {\r\n                System.out.print(\" \");\r\n            }\r\n            // 輸出\r\n            System.out.print(\"|\");\r\n            System.out.println(\"___\" + temp_CallMethods + \"     \");\r\n            String[] arrSplit = temp_CallMethods.split(\":\");\r\n            //繼續往下一層找\r\n            find_all_called(arrSplit[1], methodCall_Node);\r\n            // add child to child_methods\r\n            child_index = to_find.find_index(methodCall_Node, arrSplit[1]);\r\n            // ChildNeedToAdd存子孫的node\r\n            MethodCallOtherMethods_Node ChildNeedToAdd = methodCall_Node.get(child_index);\r\n            //把Child_node加進list_for_child這個arraylist裡\r\n            list_for_child.add(ChildNeedToAdd);\r\n        }\r\n        annotation_Node.get(i).setChild_methods((ArrayList<MethodCallOtherMethods_Node>) list_for_child.clone());\r\n        //            AnnotationCorrespondingMethod_Node temp = new AnnotationCorrespondingMethod_Node(ChildWillAddTo_annotation.getAnnotations(), ChildWillAddTo_annotation.getMethodName(), ChildWillAddTo_annotation.getClassName(), ChildWillAddTo_annotation.getEndpoint(), list_for_child);\r\n        ASTBuild.add(annotation_Node.get(i));\r\n        // 檢查存到的child_methods有沒有正確\r\n        //            System.out.print(ChildWillAddTo_annotation.getMethodName()+\"-----\"); //印現在的method name\r\n        //            for(MethodCallOtherMethods_Node check : annotation_Node.get(i).getChild_methods()){\r\n        //                System.out.print(check.getMethodName()+\"、\");\r\n        //            }\r\n        //            System.out.println();\r\n        // 清空list，不然會存到之前的\r\n        list_for_child.clear();\r\n    }\r\n}"